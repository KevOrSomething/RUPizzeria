package com.example.pizzaandroidproject;import java.text.DecimalFormat;/** * A class to represent a Hawaiian pizza as a subclass of Pizza, with custom toppings * and methods to calculate the price. * @author Arnav Lakkavajjala, Kevin Perez * */public class Hawaiian extends Pizza {    private static final double BASE_PRICE = 10.99;    private static final int BASE_TOPPINGS = 2;    /**     * A constructor that adds Pineapple and Ham to the Hawaiian pizza.     */    public Hawaiian() {        super();        toppings.add(Topping.Pineapple);        toppings.add(Topping.Ham);    }    /**     * A method to calculate the price of the pizza given the toppings, base price, and size of the pizza.     * @return final price of the current Hawaiian pizza.     */    public double price() {        int addedToppings = toppings.size() - BASE_TOPPINGS;        if(toppings.size() > MAX_TOPPINGS) {            addedToppings = MAX_TOPPINGS - BASE_TOPPINGS;        }        if (addedToppings < 0) addedToppings = 0;        double finalPrice = BASE_PRICE + (sizeNum() * SIZE_PRICE) + (addedToppings * TOPPING_PRICE);        return Math.round(finalPrice*ROUNDING_CORRECTION)/ROUNDING_CORRECTION;    };    /**     * A toString method to represent the Hawaiian pizza as a String.     * @return a string of the Hawaiian object's information.     */    @Override    public String toString() {        String moneyFormat = "###,##0.00";        DecimalFormat decimalFormat = new DecimalFormat(moneyFormat);        String formattedPrice = decimalFormat.format(this.price());        return "Hawaiian " + super.toString() + ", $" + formattedPrice;    }}